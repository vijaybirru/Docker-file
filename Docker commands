[root@ip-172-31-37-70 ~]# docker container stats  (like top commmand in linux ,shows mem usuage)

df9a4a43c4a4        cocky_chaplygin     0.00%               2.133MiB / 985.8MiB   0.22%               2.01kB / 0B         0B / 0B             0
CONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
df9a4a43c4a4        cocky_chaplygin     0.00%               2.133MiB / 985.8MiB   0.22%               2.01kB / 0B         0B / 0B             0

------------------------------------------------------------------
[root@ip-172-31-37-70 ~]# docker container top df9a4a43c4a4(container id)-shows which process are running on container
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
root                8785                8760                0                   11:18               pts/0               00:00:00            nginx: master process nginx -g daemon off;
101                 8847                8785                0                   11:18               pts/0               00:00:00            nginx: worker proces
---------------------------------------------------------------------------
Docker port mapping, rename container, restart container, exec container


Docker port mapping,
[root@ip-172-31-37-70 ~]# docker run -itd -p 3600:80 --name testnginx nginx( here 3600 is server port,80 is container port
that means call is forwarded from server port  to container port)
6a8ca4a093ae59856f7a1f012492623614242306b5d25ac291b882f9178c164d
[root@ip-172-31-37-70 ~]# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
6a8ca4a093ae        nginx               "nginx -g 'daemon of…"   45 seconds ago      Up 44 seconds       0.0.0.0:3600->80/tcp   testnginx
df9a4a43c4a4        nginx               "nginx -g 'daemon of…"   About an hour ago   Up About an hour    80/tcp                 cocky_chaplygin

exec container
[root@ip-172-31-37-70 ~]# docker exec -it 6a8ca4a093ae /bin/bash
root@6a8ca4a093ae:/# yum install git

rename container
[root@ip-172-31-37-70 ~]# docker container rename df9a4a43c4a4 nginx1111 (df9 is container id and nginx111 is new name of container)
[root@ip-172-31-37-70 ~]# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
6a8ca4a093ae        nginx               "nginx -g 'daemon of…"   8 minutes ago       Up 8 minutes        0.0.0.0:3600->80/tcp   testnginx
df9a4a43c4a4        nginx               "nginx -g 'daemon of…"   About an hour ago   Up About an hour    80/tcp     
=======================================================================================================================

Attach to running container, kill, wait, pause, unpause, prune, port

What's the difference between docker stop and docker kill?

Afaik, both will stop a running container. 
Is it that docker stop attempts to stop the process run inside the container in the correct way, 
while docker kill will send a kill signal? If so how would docker stop know how to correctly stop the running process. 
(Since this differs from process to process)
-------------------
Removing Volumes
docker volume rm volume_name volume_name
-------------------------
create docker container, diff docker container and copy file into container

docker create -it centos
it will creates an container from centos image.. if centos image is not there then docker pull centos from hub to local and creates a docker container 

docker container diff containerid
by this diff command docker will show the different files and folders happened in that container

copy file to container

[root@ip-172-31-37-70 home]# vi 123.txt
[root@ip-172-31-37-70 home]# pwd
/home
[root@ip-172-31-37-70 home]# ls
1  123.txt  dockerfile  ec2-user
[root@ip-172-31-37-70 home]# docker container cp 123.txt 59e42e9136ba:/home/
[root@ip-172-31-37-70 home]# docker container diff 59e42e9136ba
C /home
A /home/123.txt

===============================================================
Export/Import docker container

[root@ip-172-31-37-70 home]# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
59e42e9136ba        centos              "/bin/bash"         32 minutes ago      Up 4 minutes                            centos-conatiner

[root@ip-172-31-37-70 home]# docker container export 59e42e9136ba > containerwithgit.tar
[root@ip-172-31-37-70 home]# ls
1  123.txt  containerwithgit  containerwithgit.tar  dockerfile  ec2-user
 
 then copy this tar on pendrive give to your friend who needs it and save on his local host where docker is installed and then do import command
 as below
 
[root@ip-172-31-37-70 home]# docker image import containerwithgit.tar imagegit
sha256:e140d8067842291317edf34d05b87af7923d9ec4fc23ef00b0ddbb5b364c591d
[root@ip-172-31-37-70 home]# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
imagegit            latest              e140d8067842        6 seconds ago       315MB
image1-vij1         latest              df1787e33c97        3 hours ago         285MB
image1-vijq         latest              df1787e33c97        3 hours ago         285MB
image1-vij4         latest              fe1ca8cf469b        4 hours ago         202MB
centos              latest              9f38484d220f        11 days ago         202MB

this is how an EXPORT and IMPORT works like
exporting an container and works as an image on other host machine

----------------------------------------------------------
---------------------------------------------------------

how to create docker image from running container (docker commit)
[root@ip-172-31-37-70 home]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
59e42e9136ba        centos              "/bin/bash"         38 minutes ago      Up 11 minutes                           centos-conatiner


here above there is 1 Container we need this container to make an image because i make changes like installing jenkins, maven,tomcat
so i need same containers like 50 needed,, so i will make this container to image ,, from that image i will make n no of containers
this is the concept behind it 
 so command id commit
 
[root@ip-172-31-37-70 home]# docker commit 59e42e9136ba mygitimagefromcontainer
sha256:3e195dca41d115e7569268c34924a8883dd7c7f5ddfeca7671afe6768868305f

[root@ip-172-31-37-70 home]# docker image ls
REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
mygitimagefromcontainer   latest              3e195dca41d1        6 seconds ago       338MB
imagegit                  latest              e140d8067842        7 minutes ago       315MB
image1-vij1               latest              df1787e33c97        3 hours ago         285MB
image1-vijq               latest              df1787e33c97        3 hours ago         285MB
image1-vij4               latest              fe1ca8cf469b        4 hours ago         202MB
centos                    latest              9f38484d220f        11 days ago         202MB

========================================================================================================


Docker save/docker load. Diff between export and save & load &import



[root@ip-172-31-37-70 home]# docker image ls
REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
mygitimagefromcontainer   latest              3e195dca41d1        40 minutes ago      338MB
imagegit                  latest              e140d8067842        About an hour ago   315MB
image1-vij1               latest              df1787e33c97        4 hours ago         285MB
image1-vijq               latest              df1787e33c97        4 hours ago         285MB
image1-vij4               latest              fe1ca8cf469b        5 hours ago         202MB
centos                    latest              9f38484d220f        11 days ago         202MB
ubuntu                    latest              94e814e2efa8        2 weeks ago         88.9MB



[root@ip-172-31-37-70 home]# docker save 73f4748109f6 > musali.tar
Error response from daemon: No such image: 73f4748109f6 
here docker save only for images to save in local repo with .tar extension 
not for conatiners


[root@ip-172-31-37-70 home]# docker save 94e814e2efa8 > musali.tar

i deleted old image ,, now i will create image from .tar file using load command

[root@ip-172-31-37-70 home]# docker load < musali.tar
762d8e1a6054: Loading layer [==================================================>]  91.39MB/91.39MB
e45cfbc98a50: Loading layer [==================================================>]  15.87kB/15.87kB
d60e01b37e74: Loading layer [==================================================>]  12.29kB/12.29kB
b57c79f4a9f3: Loading layer [==================================================>]  3.072kB/3.072kB
Loaded image ID: sha256:94e814e2efa8845d95b2112d54497fbad173e45121ce9255b93401392f538499
[root@ip-172-31-37-70 home]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
59e42e9136ba        centos              "/bin/bash"         About an hour ago   Up About an hour                        centos-conatiner
[root@ip-172-31-37-70 home]# docker image ls
REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
mygitimagefromcontainer   latest              3e195dca41d1        45 minutes ago      338MB
imagegit                  latest              e140d8067842        About an hour ago   315MB
image1-vij1               latest              df1787e33c97        4 hours ago         285MB
image1-vijq               latest              df1787e33c97        4 hours ago         285MB
image1-vij4               latest              fe1ca8cf469b        5 hours ago         202MB
centos                    latest              9f38484d220f        11 days ago         202MB
<none>                    <none>              94e814e2efa8        2 weeks ago         88.9MB

****
diff b/w docker save and Export 
     b/w docker load and Import
     
docker save will get all layers as per it but docker Export wont 




How to push image on docker hub, image tag, image pull, docker login








------------------------------------
[root@ip-172-31-25-89 ~]# docker image ls --format '{{.ID}}, {{.Repository}}'
cd14cecfdb3a, 108w1a0457/jenkins
cd14cecfdb3a, docker.io/jenkins
cd14cecfdb3a, jenkins
cd14cecfdb3a, registry-host:5000/myadmin/rhel-httpd
-------------------------------------------------------------------------
Docker network Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks

 Docker Networking (Null Network, None Network)
 by default docker had 3 n/w 
 
root@ip-172-31-25-89 ~]# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
7a3e3a009fb0        bridge              bridge              local
732eada04535        host                host                local
632aaadbdcb9        none                null                local

here null network means 
i dont want to connect my docker to any ip address , that means null network
if you enter container and type ifconfig you wont get any ip address
this is the use of null network

root@ip-172-31-25-89 ~]# docker run -it --network=none centos

if you want to check ip address
use inspect command 
[root@ip-172-31-25-89 ~]# docker inspect 3ffcddaad739
 "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "eb0fc3ad2552140d70cdc6b0dbc197c57cc9dcbc778542d7b208e517921f1d82",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": null,
            "SandboxKey": "/var/run/docker/netns/eb0fc3ad2552",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "",
            "Gateway": "",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "",
            "IPPrefixLen": 0,
            "IPv6Gateway": "",
            "MacAddress": "",
            "Networks": {
                "none": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "632aaadbdcb9532dae09728557534156fc3a35f30953224ebdac78d7315900d8",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": ""

===========================
Docker Networking (Connect, Disconnect)
 
 HOw to attach one container to different networks??
 1:here conatiner created in bridge network
 now connecting to vijay network
 [root@ip-172-31-25-89 ~]# docker network connect vijay 7d05

[root@ip-172-31-25-89 ~]# docker start 7d05
7d05
[root@ip-172-31-25-89 ~]# docker attach 7d05
root@7d05513eef12:/#
root@7d05513eef12:/# ifconfig(now we can see etho and eth1 are 2 networks connected to one container) by connect command in docker
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:02
          inet addr:172.17.0.2  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:acff:fe11:2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:656 (656.0 B)  TX bytes:656 (656.0 B)

eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:02
          inet addr:172.18.0.2  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:acff:fe12:2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:656 (656.0 B)  TX bytes:656 (656.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@7d05513eef12:/# docker network disconnect bridge 7d05
bash: docker: command not found
root@7d05513eef12:/# exit
exit
[root@ip-172-31-25-89 ~]#  docker network disconnect bridge 7d05 (now disconnecting bridge network out of 2 networks)

[root@ip-172-31-25-89 ~]#
[root@ip-172-31-25-89 ~]# docker attach 7d05
You cannot attach to a stopped container, start it first
[root@ip-172-31-25-89 ~]# docker start 7d05
7d05
[root@ip-172-31-25-89 ~]# docker attach 7d05
root@7d05513eef12:/#
root@7d05513eef12:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:12:00:02
          inet addr:172.18.0.2  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:acff:fe12:2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:7 errors:0 dropped:0 overruns:0 frame:0
          TX packets:7 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:586 (586.0 B)  TX bytes:586 (586.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@7d05513eef12:/# exit
exit

2:: if container is created in null network , we cannot connect another network to null network as below
[root@ip-172-31-25-89 ~]# docker run -it --network=none --name=os2 ubuntu:14.04 bash
[root@ip-172-31-25-89 ~]# docker network connect bridge fac4
Error response from daemon: Container cannot be connected to multiple networks with one of the networks in private (none) mode
[root@ip-172-31-25-89 ~]# docker network connect vijay fac4
Error response from daemon: Container cannot be connected to multiple networks with one of the networks in private (none) mode

3:if container created in host network.. if you want to connect to another network its not possible to connect
root@ip-172-31-25-89 ~]# docker run -it --network=host --name=os3 ubuntu:14.04 bash
[root@ip-172-31-25-89 ~]# docker network connect bridge 427e
Error response from daemon: Container sharing network namespace with another container or host cannot be connected to any other network
[root@ip-172-31-25-89 ~]# docker network connect vijay 427e
Error response from daemon: Container sharing network namespace with another container or host cannot be connected to any other network
===========================================================================================================
Docker Networking (Remove, Proun)
Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks
======================================================================
Docker (in Hindi) : Docker Registry/Repository (Insecure)



